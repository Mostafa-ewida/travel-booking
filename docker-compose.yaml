services:
  backend:
    build:
      context: ./code/backend
      dockerfile: Dockerfile
    image: mostafaewida/fixed_backend
    ports:
      - "8000:8000"
    environment:
      - MONGO_URI=mongodb://lclr_user:1th4ok1ymfurQaM9@mongo:27017/lclr_db?authSource=lclr_db
      - REDIS_URL=redis://:hgdfwegf67435jsdbjkTY@redis:6379
      - RABBITMQ_URL=amqp://bugs-bunny:sdfjgh45iotgdfjk456@rabbitmq:5672
      - KEYCLOAK_URL=http://keycloak:8080
      - KEYCLOAK_ADMIN=mostafa
      - KEYCLOAK_ADMIN_PASSWORD=7eg35sJFHE366dgwfIQueuiKDJ837473KSOWEIhffhrWDbdjh
      # - KEYCLOAK_CLIENT_ID=travel-api
      # - KEYCLOAK_REALM=travel-realm
      # - KEYCLOAK_CLIENT_ID=travel-api
      # - KEYCLOAK_CLIENT_SECRET=your-strong-secret-here
      - MINIO_ENDPOINT=minio:9000
      - MINIO_ACCESS_KEY=admin
      - MINIO_SECRET_KEY=minio-root
      - ELASTIC_APM_SERVER_URL=http://apm-server:8200
      - ELASTIC_APM_SERVICE_NAME=travel-booking-api
  
    volumes:
      - ./code/frontend/config.js:/app/frontend/src/config.js
    depends_on:
      - redis
      - rabbitmq
      - keycloak
      - minio
      # - apm-server
      - mongo

  frontend:
    build:
      context: ./code/frontend
    # image: mostafaewida/fixed_frontend
    ports:
      - "80:80"
    volumes:
      - ./code/frontend/config.js:/app/src/config.js 
    depends_on:
      - backend


  mongo:
    image: mongo:6.0
    container_name: mongo
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: rootpass
    volumes:
      - mongo_data:/data/db
      - ./init-db.js:/docker-entrypoint-initdb.d/init.js

  redis:
    image: redis:7-alpine
    command: redis-server --requirepass hgdfwegf67435jsdbjkTY
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  rabbitmq:
    image: rabbitmq:3-management
    environment:
      RABBITMQ_DEFAULT_USER: bugs-bunny
      RABBITMQ_DEFAULT_PASS: sdfjgh45iotgdfjk456
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq

  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: password
    volumes:
      - postgres_data:/var/lib/postgresql/data

  keycloak:
    image: quay.io/keycloak/keycloak:21.1
    command: start-dev 
    environment:
      KEYCLOAK_ADMIN: mostafa
      KEYCLOAK_ADMIN_PASSWORD: 7eg35sJFHE366dgwfIQueuiKDJ837473KSOWEIhffhrWDbdjh
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres:5432/keycloak
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: password
    ports:
      - "8080:8080"
    depends_on:
      - postgres

  minio:
    image: minio/minio
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: admin
      MINIO_ROOT_PASSWORD: minio-root
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data

 


  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.13.4
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=true
      - xpack.security.transport.ssl.enabled=false
      - ELASTIC_USERNAME=elastic
      - ELASTIC_PASSWORD=elastic
    ports:
      - 9200:9200
    volumes:
      -  es_data:/usr/share/elasticsearch/data


  kibana:
    image: docker.elastic.co/kibana/kibana:8.13.4
    container_name: kibana
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - ELASTICSEARCH_USERNAME=elastic
      - ELASTIC_PASSWORD=elastic
      - ELASTICSEARCH_SERVICE_TOKEN=<token>
    ports:
      - 5601:5601


  apm-server:
    image: docker.elastic.co/apm/apm-server:8.13.4
    container_name: apm-server
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - ELASTICSEARCH_USERNAME=elastic
      - ELASTIC_PASSWORD=elastic
      - kibana.host=http://kibana:5601
    ports:
      - 8200:8200

volumes:
  redis_data:
  postgres_data:
  minio_data:
  rabbitmq_data:
  es_data:
  mongo_data:
  certs:
    driver: local
  esdata01:
    driver: local
  kibanadata:
    driver: local